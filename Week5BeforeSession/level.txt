public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode A) {
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        
        if(A == null) {
            return result;
        }
        
        int currentLevelNum = 1;
        int nextLevelNum = 0;
        queue.add(A);
        ArrayList<Integer> levelList = new ArrayList<Integer>();
        while(!queue.isEmpty()) {
            TreeNode node = queue.poll();
            currentLevelNum--;
            levelList.add(node.val);
            
            if(node.left != null){
                queue.add(node.left);
                nextLevelNum++;
            }
            
            if(node.right != null){
                queue.add(node.right);
                nextLevelNum++;
            }
            
            if(currentLevelNum == 0){
                currentLevelNum = nextLevelNum;
                nextLevelNum = 0;
                result.add(new ArrayList<Integer>(levelList));
                levelList.clear();
            }
        }
        
        return result;
        
    }
}